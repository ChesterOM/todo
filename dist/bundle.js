(()=>{"use strict";let t=0,s=0;class e{constructor(s,e,a,o){this.id=t++,this.title=s,this.description=e,this.dueDate=a,this.priority=o,this.completed=!1}markComplete(){this.completed=!0}updatePriority(t){this.priority=t}}class a{constructor(t){this.id=s++,this.title=t,this.tasks=[]}addTask(t){this.tasks.push(t)}removeTask(t){this.tasks=this.tasks.filter((s=>s.id!==t))}}const o=new class{constructor(){this.projects=[]}addProject(t){this.projects.push(t)}deleteProject(t){this.projects=this.projects.filter((s=>s.id!==t))}getProject(t){return this.projects.find((s=>s.id===t))}},i=new class{constructor(){this.tasks=[]}addTask(t){this.tasks.push(t)}deleteTask(t){this.tasks=this.tasks.filter((s=>s.id!==t))}markTaskComplete(t){const s=this.tasks.find((s=>s.id===t));s&&s.markComplete()}},d=new a("Default Project");o.addProject(d);const r=new e("Test Task","This is a test task",new Date,"low");d.addTask(r),i.addTask(r),(()=>{const t=new e("Task 1","First task",new Date,"high"),s=new e("Task 2","Second task",new Date,"medium"),d=new e("Task 3","Third task",new Date,"low");i.addTask(t),i.addTask(s),i.addTask(d);const r=new a("Project 1"),c=new a("Project 2");o.addProject(r),o.addProject(c),r.addTask(t),r.addTask(s),c.addTask(d),i.markTaskComplete(t.id),o.projects.forEach((t=>{console.log(`Project: ${t.title}`),t.tasks.forEach((t=>{console.log(`   Task: ${t.title} | Status: ${t.completed?"Complete":"Incomplete"}`)})),console.log("-------------------")}))})()})();